// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NGKHandIn3.Models;

namespace NGKHandIn3.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20200427132309_SeededData")]
    partial class SeededData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NGKHandIn3.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("NGKHandIn3.Models.WeatherObservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AirPressure")
                        .HasColumnType("float");

                    b.Property<int>("HumidityPercentage")
                        .HasColumnType("int");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<string>("LocationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<double>("Temperature")
                        .HasColumnType("float");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("WeatherObservations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AirPressure = 2.7999999999999998,
                            HumidityPercentage = 20,
                            Latitude = 66.700000000000003,
                            LocationName = "Florida",
                            Longitude = 90.200000000000003,
                            Temperature = 30.0,
                            Time = new DateTime(2020, 4, 27, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 2,
                            AirPressure = 6.5,
                            HumidityPercentage = 60,
                            Latitude = 77.700000000000003,
                            LocationName = "Denmark",
                            Longitude = 65.200000000000003,
                            Temperature = 65.0,
                            Time = new DateTime(2020, 4, 27, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 3,
                            AirPressure = 2.7999999999999998,
                            HumidityPercentage = 20,
                            Latitude = 68.400000000000006,
                            LocationName = "Sweden",
                            Longitude = 90.200000000000003,
                            Temperature = 30.0,
                            Time = new DateTime(2020, 4, 27, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 4,
                            AirPressure = 8.6999999999999993,
                            HumidityPercentage = 3,
                            Latitude = 16.699999999999999,
                            LocationName = "Belgium",
                            Longitude = 90.200000000000003,
                            Temperature = 30.0,
                            Time = new DateTime(2020, 4, 27, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 5,
                            AirPressure = 90.799999999999997,
                            HumidityPercentage = 0,
                            Latitude = 20.699999999999999,
                            LocationName = "California",
                            Longitude = 43.200000000000003,
                            Temperature = 6.0,
                            Time = new DateTime(2020, 4, 27, 0, 0, 0, 0, DateTimeKind.Local)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
